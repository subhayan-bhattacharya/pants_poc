[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[project]
authors = [
  {name = "soft-pyio", email = "soft-pyio@elevait.de"},
]
dependencies = []
description = "Short POC on pants"
dynamic = ["version"]
name = "elevait-pants-poc"
readme = "README.md"
requires-python = ">=3.12"

[project.optional-dependencies]
develop = [
  "mypy",
  "lxml",
]
service = [
  "fastapi>=0.111.0",
  "uvicorn>=0.30.1",
  "requests>=2.32.3",
  "types-requests>=2.32",
  "beanie",
  "pydantic-extra-types",
]
tests = [
  "pytest",
  "pytest-cov",
  "pytest-mock",
  "pytest-docker",
  "requests"
]

[project.scripts]
start-pants-poc = "pants_poc.service.app:start_service"

[tool.coverage.run]
parallel = true
source = ["src"]

[tool.cruft]
skip = [
  "src/",
  "tests/",
  "requirements.txt",
  "README.md",
  "CHANGELOG.md",
  ".git",
  ".env.sample",
  "docker-compose.yaml",
]

[tool.hatch.build.hooks.vcs]
version-file = "src/pants_poc/version.py"

[tool.hatch.build.targets.sdist]
only-include = ["src/pants_poc"]

[tool.hatch.build.targets.wheel]
packages = ["src/pants_poc"]

[tool.hatch.version]
source = "vcs"

[tool.mypy]
check_untyped_defs = true
cobertura_xml_report = "mypy-reports"
color_output = true
follow_imports = "normal"
html_report = "htmlmypy"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true

[tool.ruff]
fix = true
src = ["src", "tests"]
target-version = "py312"

[tool.ruff.lint]
# Ignored rules:
# G004: Logging statement uses f-string
# N805: First argument of a method should be named self (clashes with pydantic validators).
# T203: pprint found.
# PT004: Fixture {function} does not return anything, add leading underscore.
# PT018: Assertion should be broken down into multiple parts.
ignore = ["G004", "N805", "T203", "PT004", "PT018"]
select = [
  "E",  # pycodestyle - warnings
  "W",  # pycodestyle - errors
  "F",  # pyflakes
  "C",  # mccabe / flake8 - comprehensions
  "I",  # isort
  "N",  # pep8-naming
  "D",  # pydocstyle
  "BLE",  # flake8 - blind except
  "A",  # flake8 - buildins
  "ISC",  # flake8 - implicit-str-concat
  "ICN",  # flake8 - import-conventions
  "G",  # flake8 - logging-format
  "INP",  # flake8 - no-pep420
  "PIE",  # flake8 - pie
  "T20",  # flake8 - print
  "PT",  # flake8 - pytest-style
  "Q",  # flake8 - quotes
  "RSE",  # flake8 - raise
  "RET",  # flake8 - return
  "SLF",  # flake8 - self
  "SIM",  # flake8 - simplify
  "TID",  # flake8 - tidy-imports
  "ARG",  # flake8 - unused-arguments
  "PTH",  # flake8 - use-pathlib
  "ERA",  # eradicate
  "PL",  # pylint
  "RUF",  # ruff-specific rules
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
order-by-type = false

[tool.ruff.lint.pydocstyle]
convention = "numpy"
